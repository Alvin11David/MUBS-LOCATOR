name: Flutter iOS Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'  # ensure Dart >= 3.8.1

      # 2a. Precache Flutter iOS artifacts
      - name: Precache Flutter iOS
        run: flutter precache --ios

      # 3. Install signing certificate
      - name: Install signing certificate
        env:
          CERT_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          CERT_BASE64: ${{ secrets.APPLE_CERTIFICATE_P12 }}
        run: |
          echo "$CERT_BASE64" | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings build.keychain
          security import certificate.p12 \
            -k ~/Library/Keychains/build.keychain \
            -P "$CERT_PASSWORD" \
            -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain

      # 4. Install provisioning profile
      - name: Install provisioning profile
        env:
          PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      # 5. Build Flutter iOS artifacts
      - name: Build Flutter iOS
        run: flutter build ios --release --no-codesign

      # 6. Archive iOS app with Xcode
      - name: Archive iOS app
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
          PROFILE_NAME: ${{ secrets.APPLE_PROVISIONING_PROFILE_NAME }}
        run: |
          xcodebuild \
            -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/Runner.xcarchive archive \
            DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
            PRODUCT_BUNDLE_IDENTIFIER=$APPLE_BUNDLE_ID \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME"

      # 7. Export IPA
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $PWD/build/Runner.xcarchive \
            -exportOptionsPlist ios/ExportOptions.plist \
            -exportPath $PWD/build

      # 8. Upload IPA artifact
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/*.ipa
